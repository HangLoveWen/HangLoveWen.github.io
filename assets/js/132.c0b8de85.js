(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{529:function(n,e,t){"use strict";t.r(e);var a=t(2),s=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("1.react/vue中的key有什么作用？（key的内部原理是什么？）")]),n._v(" "),e("p",[n._v("2.为什么遍历列表时，key最好不要用index?")]),n._v(" "),e("p",[n._v("1.虚拟DOM中key的作用;")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("1.简单的说：key是虚拟DOM对象的标识，在更新显示时key起着极其重要的作用。\n\n2.详细的来说：当状态中的数据发生变化时，react会根据【新数据】生成【新的虚拟DOM】，随后React进行【新虚拟DOM】与【旧虚拟DOM】的diff比较，比较规则如下：\n\na.旧虚拟DOM中找到了与新虚拟DOM相同的key：\n\n1.若虚拟DOM中内容没变，直接使用之前的真实DOM\n\n2.若虚拟DOM中内容变了，则生成新的真实DOM\n\nb.旧虚拟DOM中未找到与新虚拟DOM相同的key\n\n根据数据创建新的真实DOM，随后渲染到页面\n")])])]),e("p",[n._v("2.用index作为key可能会引发的问题：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("1.若对数据进行：逆序添加、逆序删除等破坏顺序操作：\n\n会产生没有必要的真实DOM更新==》界面效果没问题，但效率低\n\n2.如果结构中还包含输入类的DOM:\n\n会产生错误DOM更新==》界面有问题\n\n3.注意！如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没有问题的。\n")])])]),e("p",[n._v("3.开发中如何选择key?:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("1.最好使用每条数据的唯一标识作为key，比如id、手机号、省份证号\n\n2.如果确定只是简单的展示数据，用index也是可以的\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);