(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{434:function(s,a,n){"use strict";n.r(a);var t=n(2),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"compact-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compact-array"}},[s._v("#")]),s._v(" "),a("code",[s._v("_.compact(array)")])]),s._v(" "),a("p",[s._v("创建一个新数组，包含原数组中所有的非假值元素。例如 "),a("code",[s._v("false")]),s._v(", "),a("code",[s._v("null")]),s._v(","),a("code",[s._v("0")]),s._v(", "),a("code",[s._v('""')]),s._v(", "),a("code",[s._v("undefined")]),s._v(", 和 "),a("code",[s._v("NaN")]),s._v(" 都是被认为是“假值”。")]),s._v(" "),a("h4",{attrs:{id:"引入版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入版本"}},[s._v("#")]),s._v(" 引入版本")]),s._v(" "),a("p",[s._v("0.1.0")]),s._v(" "),a("h4",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("array")]),s._v(" "),a("em",[s._v("(Array)")]),s._v(" : 待处理的数组")])]),s._v(" "),a("h4",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[s._v("#")]),s._v(" 返回值")]),s._v(" "),a("p",[a("em",[s._v("(Array)")]),s._v(" : 返回过滤掉假值的新数组。")]),s._v(" "),a("h4",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => [1, 2, 3]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[s._v("#")]),s._v(" 源码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function compact(array) {\n  \tlet resIndex = 0\n  \tconst result = []\n\t//如果array为null，则返回空数组\n  \tif (array == null) {\n  \t  \treturn result\n  \t}\n\t遍历array数组，将数组中的每个元素转化为布尔值后判断是否为ture，false为虚假值，需要过滤\n  \tfor (const value of array) {\n    \tif (value) {\n      \tresult[resIndex++] = value\n    \t}\n  \t}\n  \treturn result\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h4",{attrs:{id:"自我实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自我实现"}},[s._v("#")]),s._v(" 自我实现")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var compact = function(a) {\n\t//判断数组是否为空\n    if (a.length == 0) return []\n\n    var b = []\n\n\t//循环遍历判断值\n    for (let i = 0; i < a.length; i++) {\n    \t//获取数组中值的类型\n        var type = Object.prototype.toString.call(a[i])\n        if (type == '[object Null]' || type == '[object Undefined]') {//如果为空Null或者Undefined就跳过\n            continue;\n        } else if (type == '[object Number]') {//如果为0或者NaN就跳过\n            if (a[i] == 0 || isNaN(a[i])) continue;\n            else b.push(a[i])\n        } else if (type == '[object Boolean]') {//如果为false就跳过\n            if (a[i] == false) continue;\n            else b.push(a[i])\n        } else if (type == '[object String]') {//如果为\"\"就跳过\n            if (a[i] == \"\") continue;\n            else b.push(a[i])\n        } else {\n            b.push(a[i])\n        }\n    }\n    return b\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"代码对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码对比"}},[s._v("#")]),s._v(" 代码对比")]),s._v(" "),a("ul",[a("li",[s._v("相较于自我实现，源码的代码简洁明了，通过转化为布尔类型省略了很多判断")])])])}),[],!1,null,null,null);a.default=e.exports}}]);