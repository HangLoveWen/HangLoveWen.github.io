(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{490:function(s,t,e){"use strict";e.r(t);var a=e(2),n=Object(a.a)({},(function(){var s=this._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("p",[this._v("1.Node.js中的模块作用域")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[this._v("1.什么是模块作用域\n\n和函数作用域类似，在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做作用域。\n")])])]),s("p",[s("img",{attrs:{src:"https://s1.imagehub.cc/images/2023/02/01/c5be791a12ed7824fdb86026d2029360.png",alt:"c5be791a12ed7824fdb86026d2029360.png"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[this._v("2.模块作用域的好处\n\n防止全局变量污染的问题\n\n![868e64e54b96dd1794207277532abbcd.png](https://s1.imagehub.cc/images/2023/02/01/868e64e54b96dd1794207277532abbcd.png)\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);